{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://bo-o-woa.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Water",
      "description": "Operations about Waters."
    }
  ],
  "paths": {
    "/user/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch updata list of user",
        "operationId": "patchUpdata",
        "description": "Patch updata user with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "Joy"
                  },
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "world@gmail.com"
                  },
                  "gender": {
                    "description": "User gender",
                    "type": "string",
                    "enum": [
                      "Woman",
                      "Man"
                    ],
                    "example": "Woman"
                  },
                  "newpassword": {
                    "description": "User new password",
                    "type": "string",
                    "example": "54321"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find user!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/updata"
                      },
                      "required": [
                        "data",
                        "name",
                        "email",
                        "gende",
                        "password"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/avatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch avatar of user",
        "operationId": "patchAvatar",
        "description": "Patch user avatar with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "avatar"
                ],
                "properties": {
                  "avatar": {
                    "description": "Avatar user",
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find user!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/avatar"
                      },
                      "required": [
                        "data",
                        "name",
                        "email",
                        "gende"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/daily": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch updata dailyNorm",
        "operationId": "patchUpdataDaily",
        "description": "Patch updata dailyNorm with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "dailyNorm"
                ],
                "properties": {
                  "dailyNorm": {
                    "description": "User dailyNorm (example: 1250)",
                    "type": "number",
                    "example": "1250"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find user!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/dailyNorm"
                      },
                      "required": [
                        "data",
                        "name",
                        "email",
                        "gende",
                        "dailyNorm"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of user",
        "operationId": "getUser",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find user!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      },
                      "required": [
                        "data",
                        "name",
                        "email"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign Up",
        "operationId": "SignUpUser",
        "description": "SignUp a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "SignUp email",
                    "type": "string",
                    "example": "world@gmail.com"
                  },
                  "password": {
                    "description": "User password (min:8, max:60)",
                    "type": "number",
                    "example": 12345
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "SignUp a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully SignUp a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/signup"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign In",
        "operationId": "loginUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "Login email",
                    "type": "string",
                    "example": "world@gmail.com"
                  },
                  "password": {
                    "description": "Login user password",
                    "type": "number",
                    "example": 12345
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-2"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "logoutUser",
        "description": "Logout a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/glass": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Post list of water",
        "operationId": "postWater",
        "description": "Post list of water with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "glass",
            "schema": {
              "type": "number"
            },
            "example": "250"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-12-14T23:10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find water!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      },
                      "required": [
                        "glass",
                        "date"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/glass/{glassId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch list of water",
        "operationId": "patchWater",
        "description": "Patch waters with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "glassId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            }
          },
          {
            "in": "query",
            "name": "volume",
            "required": true,
            "schema": {
              "type": "number",
              "example": "3600"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-12-14T23:10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found waters!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find waters!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      },
                      "required": [
                        "date"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water by glass",
        "operationId": "deleteWater",
        "description": "Get water by glassId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "glassId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete found water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/daily": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get Daily of water",
        "operationId": "getDaily",
        "description": "Get Daily of waters with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-12-14T23:10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find user!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/getdaily"
                      },
                      "required": [
                        "data",
                        "name",
                        "email"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/monthly": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get Monthly of water",
        "operationId": "getMonthly",
        "description": "Get Monthly of waters with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-12-14T23:10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfull find user!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/getmonthly"
                      },
                      "required": [
                        "data",
                        "name",
                        "email"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "updata": {
        "type": "object",
        "required": [
          "email",
          "gender",
          "dailyNorm"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "Joy"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "world@gmail.com"
          },
          "gender": {
            "description": "User gender",
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ]
          },
          "dailyNorm": {
            "description": "User dailyNorm",
            "type": "string",
            "example": "1500 ml"
          },
          "photo": {
            "description": "Link to user photo",
            "type": "string",
            "example": "https://image/upload/image.jpg"
          }
        }
      },
      "avatar": {
        "type": "object",
        "required": [
          "email",
          "gender",
          "dailyNorm",
          "avatarUrl"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "Joy"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "world@gmail.com"
          },
          "gender": {
            "description": "User gender",
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ]
          },
          "dailyNorm": {
            "description": "User dailyNorm",
            "type": "string",
            "example": "1500 ml"
          },
          "avatarUrl": {
            "description": "Link to user avatarUrl",
            "type": "string",
            "example": "https://image/upload/image.jpg"
          }
        }
      },
      "dailyNorm": {
        "type": "object",
        "required": [
          "email",
          "gender",
          "dailyNorm"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "Joy"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "world@gmail.com"
          },
          "gender": {
            "description": "User gender",
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ]
          },
          "dailyNorm": {
            "description": "User dailyNorm",
            "type": "number",
            "example": "1500"
          },
          "photo": {
            "description": "Link to user photo",
            "type": "string",
            "example": "https://image/upload/image.jpg"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "email",
          "gender",
          "dailyNorm"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "Joy"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "world@gmail.com"
          },
          "gender": {
            "description": "User gender",
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ]
          },
          "dailyNorm": {
            "description": "User dailyNorm",
            "type": "string",
            "example": "1500 ml"
          },
          "avatarUrl": {
            "description": "Link to user avatarUrl",
            "type": "string",
            "example": "https://image/upload/image.jpg"
          }
        }
      },
      "signup": {
        "type": "object",
        "required": [
          "email",
          "password"
        ]
      },
      "login": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "accessToken": {
            "description": "Login contacts token",
            "type": "string",
            "example": "nSu9mqGJzsaEGwx4nBXoHGykYumTCbEqUY6Xg5JB"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "date",
          "volume",
          "dailyNorm"
        ],
        "properties": {
          "date": {
            "description": "Water date",
            "type": "string",
            "example": "2024-12-14T23:10"
          },
          "volume": {
            "description": "Water volume",
            "type": "number",
            "example": "3600"
          },
          "dailyNorm": {
            "description": "Water dailyNorm",
            "type": "number",
            "example": "2500"
          }
        }
      },
      "getdaily": {
        "type": "object",
        "required": [
          "numberGlasses",
          "date",
          "dailyNorma",
          "totalWater",
          "consumedPercentage",
          "logs"
        ],
        "properties": {
          "date": {
            "description": "Water date",
            "type": "string",
            "example": "2024-12-14T23:10"
          },
          "dailyNorma": {
            "description": "Water dailyNorma",
            "type": "string",
            "example": "2500 L"
          },
          "totalWater": {
            "description": "Water totalWater",
            "type": "string",
            "example": "2000 L"
          },
          "numberGlasses": {
            "description": "Water numberGlasses",
            "type": "number",
            "example": "4"
          },
          "consumedPercentage": {
            "description": "Water consumedPercentage",
            "type": "number",
            "example": "83%"
          },
          "logs": {
            "description": "Water data",
            "type": "array"
          }
        }
      },
      "getmonthly": {
        "type": "object",
        "required": [
          "numberGlasses",
          "date",
          "dailyNorma",
          "consumedPercentage"
        ],
        "properties": {
          "date": {
            "description": "Water date",
            "type": "string",
            "example": "2024-12-14T23:10"
          },
          "dailyNorma": {
            "description": "Water dailyNorma",
            "type": "string",
            "example": "2000"
          },
          "numberGlasses": {
            "description": "Water numberGlasses",
            "type": "number",
            "example": "4"
          },
          "consumedPercentage": {
            "description": "Water consumedPercentage",
            "type": "number",
            "example": "83%"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Water not refresh",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "NotRefresh"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water not refresh"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "EmailInUse"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Badrequest"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-2": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}